from datetime import date,datetime
from scheduler.models import TLE, NextPass
from scheduler.searchAlgorithms import _Helper, HillClimbing
from django.test import TestCase



class FitnessFunctionTests(TestCase):
	#test individual parts of the fitness function
	# def tests_findSchedulableSatellites(self):

	# 	sixtysevenCAOS = datetime(2017,1,25,0,6,52)
	# 	sixtysevenCLOS = datetime(2017,1,25,0,14,42)
	# 	sixtysevenDAOS = datetime(2017,1,25,0,8,37)
	# 	sixtysevenDLOS = datetime(2017,1,25,0,16,18)
	# 	briteAOS = datetime(2017,1,25,0,19,39)
	# 	briteLOS = datetime(2017,1,25,0,30,4)
	# 	fconeAOS = datetime(2017,1,25,0,17,14)
	# 	fconeLOS = datetime(2017,1,25,0,30,6)
	# 	fcthreeAOS = datetime(2017,1,25,0,11,3)
	# 	fcthreeLOS = datetime(2017,1,25,0,23,54)
	# 	fcfiveAOS = datetime(2017,1,25,0,8,47)
	# 	fcfiveLOS = datetime(2017,1,25,0,21,37)
	# 	fefourteenAOS = datetime(2017,1,25,0,0,33)
	# 	fefourteenLOS = datetime(2017,1,25,0,8,13)	
	# 	itupAOS = datetime(2017,1,25,0,22,12)
	# 	itupLOS = datetime(2017,1,25,0,34,49)

	# 	sixtysevenCTLE = TLE(1,"sixtysevenC","line1","line2")
	# 	sixtysevenDTLE= TLE(1,"sixtysevenD","line1","line2")
	# 	briteTLE= TLE(1,"brite","line1","line2")
	# 	fconeTLE= TLE(1,"fcone","line1","line2")
	# 	fcthreeTLE= TLE(1,"fcthree","line1","line2")
	# 	fcfiveTLE= TLE(1,"fcfive","line1","line2")
	# 	fefourteenTLE= TLE(1,"fefourteen","line1","line2")
	# 	itupTLE= TLE(1,"itup","line1","line2")

	# 	date1 = datetime(2017, 1, 1, 12, 0, 0)
	# 		# id, tle, riseTime, setTime, duration, maxElevation, riseAzimuth, setAzimuth

	# 	sixtysevenC = NextPass(1,sixtysevenCTLE,sixtysevenCAOS, sixtysevenCLOS,date1,date1,date1,date1)
	# 	sixtysevenD = NextPass(2,sixtysevenDTLE,sixtysevenDAOS, sixtysevenDLOS,date1,date1,date1,date1)
	# 	brite = NextPass(5,briteTLE,briteAOS, briteLOS,date1,date1,date1,date1)
	# 	fcone = NextPass(10,fconeTLE,fconeAOS,fconeLOS,date1,date1,date1,date1)
	# 	fcthree = NextPass(11,fcthreeTLE,fcthreeAOS, fcthreeLOS,date1,date1,date1,date1)
	# 	fcfive = NextPass(12,fcfiveTLE,fcfiveAOS, fcfiveLOS,date1,date1,date1,date1)
		
	# 	fefourteen = NextPass(18,fefourteenTLE,fefourteenAOS,fefourteenLOS,date1,date1,date1,date1)
	# 	itup = NextPass(19,itupTLE,itupAOS, itupLOS,date1,date1,date1,date1)
		
	# 	satGroup=[[sixtysevenC,sixtysevenD,brite,fcone,fcthree,fcfive,fefourteen,itup]]
		
	# 	score, nextpassList= _Helper._findSchedulableSatellites(satGroup)

	# 	for pas in nextpassList:
	# 		print(pas)
	# 		print(pas.riseTime)
	# 		print(pas.setTime)

	def test_fitnessFunction_many_real_sats(self):

		catAOS = datetime(2017,1,25,0,52,59)
		catLOS = datetime(2017,1,25,1,4,28)
		sixtysevenCAOS = datetime(2017,1,25,0,6,52)
		sixtysevenCLOS = datetime(2017,1,25,0,14,42)
		sixtysevenDAOS = datetime(2017,1,25,0,8,37)
		sixtysevenDLOS = datetime(2017,1,25,0,16,18)
		aistAOS = datetime(2017,1,25,0,35,21)
		aistLOS = datetime(2017,1,25,0,48,8)
		beesatAOS = datetime(2017,1,25,0,46,48)
		beesatLOS = datetime(2017,1,25,1,0,4) 
		briteAOS = datetime(2017,1,25,0,19,39)
		briteLOS = datetime(2017,1,25,0,30,4)
		cubebugAOS = datetime(2017,1,25,0,41,54)
		cubebugLOS = datetime(2017,1,25,0,52,49)
		sailAOS = datetime(2017,1,25,0,41,17)
		sailLOS = datetime(2017,1,25,0,53,28)
		eagleAOS = datetime(2017,1,25,0,53,13)
		eagleLOS = datetime(2017,1,25,1,2,56)	
		exoAOS = datetime(2017,1,25,0,57,27)
		exoLOS = datetime(2017,1,25,1,5,27)
		fconeAOS = datetime(2017,1,25,0,17,14)
		fconeLOS = datetime(2017,1,25,0,30,6)
		fcthreeAOS = datetime(2017,1,25,0,11,3)
		fcthreeLOS = datetime(2017,1,25,0,23,54)
		fcfiveAOS = datetime(2017,1,25,0,8,47)
		fcfiveLOS = datetime(2017,1,25,0,21,37)
		fceightAOS = datetime(2017,1,25,0,52,35)
		fceightLOS = datetime(2017,1,25,1,5,21)
		fcnineAOS = datetime(2017,1,25,0,50,43)
		fcnineLOS = datetime(2017,1,25,1,3,31)
		fctenAOS = datetime(2017,1,25,0,53,57)
		fctenLOS = datetime(2017,1,25,1,6,40)
		fcelevenAOS = datetime(2017,1,25,0,59,45)
		fcelevenLOS = datetime(2017,1,25,1,12,25)	
		fethirteenAOS = datetime(2017,1,25,1,7,32)
		fethirteenLOS = datetime(2017,1,25,1,15,6)	
		fefourteenAOS = datetime(2017,1,25,0,0,33)
		fefourteenLOS = datetime(2017,1,25,0,8,13)	
		itupAOS = datetime(2017,1,25,0,22,12)
		itupLOS = datetime(2017,1,25,0,34,49)	

		catTLE = TLE(0,"cat","line1","line2")
		sixtysevenCTLE = TLE(1,"sixtysevenC","line1","line2")
		sixtysevenDTLE= TLE(1,"sixtysevenD","line1","line2")
		aistTLE= TLE(1,"aist","line1","line2")
		beesatTLE= TLE(1,"beesat","line1","line2")
		briteTLE= TLE(1,"brite","line1","line2")
		cubebugTLE= TLE(1,"cubebug","line1","line2")
		sailTLE= TLE(1,"sail","line1","line2")
		eagleTLE= TLE(1,"eagle","line1","line2")
		exoTLE= TLE(1,"exo","line1","line2")
		fconeTLE= TLE(1,"fcone","line1","line2")
		fcthreeTLE= TLE(1,"fcthree","line1","line2")
		fcfiveTLE= TLE(1,"fcfive","line1","line2")
		fceightTLE	= TLE(1,"fceight","line1","line2")
		fcnineTLE= TLE(1,"fcnine","line1","line2")
		fctenTLE= TLE(1,"fcten","line1","line2")
		fcelevenTLE= TLE(1,"fceleven","line1","line2")
		fethirteenTLE= TLE(1,"fethirteen","line1","line2")
		fefourteenTLE= TLE(1,"fefourteen","line1","line2")
		itupTLE= TLE(1,"itup","line1","line2")

		date1 = datetime(2017, 1, 1, 12, 0, 0)
			# id, tle, riseTime, setTime, duration, maxElevation, riseAzimuth, setAzimuth
		cat = NextPass(0,catTLE, catAOS, catLOS, 0,0,0,0)
		sixtysevenC = NextPass(1,sixtysevenCTLE,sixtysevenCAOS, sixtysevenCLOS,date1,date1,date1,date1)
		sixtysevenD = NextPass(2,sixtysevenDTLE,sixtysevenDAOS, sixtysevenDLOS,date1,date1,date1,date1)
		aist = NextPass(3,aistTLE,aistAOS, aistLOS,date1,date1,date1,date1)
		beesat = NextPass(4,beesatTLE,beesatAOS, beesatLOS,date1,date1,date1,date1)
		brite = NextPass(5,briteTLE,briteAOS, briteLOS,date1,date1,date1,date1)
		cubebug = NextPass(6,cubebugTLE,cubebugAOS, cubebugLOS,date1,date1,date1,date1)
		sail = NextPass(7,sailTLE,sailAOS, sailLOS,date1,date1,date1,date1)
		eagle = NextPass(8,eagleTLE,eagleAOS, eagleLOS,date1,date1,date1,date1)
		exo = NextPass(9,exoTLE,exoAOS,exoLOS,date1,date1,date1,date1)
		fcone = NextPass(10,fconeTLE,fconeAOS,fconeLOS,date1,date1,date1,date1)
		fcthree = NextPass(11,fcthreeTLE,fcthreeAOS, fcthreeLOS,date1,date1,date1,date1)
		fcfive = NextPass(12,fcfiveTLE,fcfiveAOS, fcfiveLOS,date1,date1,date1,date1)
		fceight = NextPass(13,fceightTLE,fceightAOS,fceightLOS,date1,date1,date1,date1)
		fcnine = NextPass(14,fcnineTLE,fcnineAOS,fcnineLOS,date1,date1,date1,date1)
		fcten = NextPass(15,fctenTLE,fctenAOS, fctenLOS,date1,date1,date1,date1)
		fceleven = NextPass(16,fcelevenTLE,fcelevenAOS, fcelevenLOS,date1,date1,date1,date1)
		fethirteen = NextPass(17,fethirteenTLE,fethirteenAOS,fethirteenLOS,date1,date1,date1,date1)
		fefourteen = NextPass(18,fefourteenTLE,fefourteenAOS,fefourteenLOS,date1,date1,date1,date1)
		itup = NextPass(19,itupTLE,itupAOS, itupLOS,date1,date1,date1,date1)		

		satList=[cat,sixtysevenC,sixtysevenD,aist,beesat,brite,cubebug,sail,eagle,
		exo,fcone,fcthree,fcfive,fceight,fcnine,fcten,fceleven,fethirteen,fefourteen,
		itup]
		usefulTime=3
		shouldBe,nextPassList = _Helper.fitnessFunction(satList,usefulTime)
		print(shouldBe)#maybe 8
		self.assertIs(shouldBe == 7,True)

	def test_fitnessFunction_many_fake_sats(self):

		sat1AOS = datetime(2017,1,25,12,2,0)
		sat1LOS = datetime(2017,1,25,12,5,0)
		sat2AOS = datetime(2017,1,25,12,0,0)
		sat2LOS = datetime(2017,1,25,12,8,0)
		sat3AOS = datetime(2017,1,25,12,25,0)
		sat3LOS = datetime(2017,1,25,12,30,0)
		sat4AOS = datetime(2017,1,25,11,57,0)
		sat4LOS = datetime(2017,1,25,12,3,0)
		sat5AOS = datetime(2017,1,25,12,7,0)
		sat5LOS = datetime(2017,1,25,12,10,0)
		sat6AOS = datetime(2017,1,25,11,57,0)
		sat6LOS = datetime(2017,1,25,12,4,0)
		sat7AOS = datetime(2017,1,25,11,57,0)
		sat7LOS = datetime(2017,1,25,12,4,0)
		sat8AOS = datetime(2017,1,25,11,57,0)
		sat8LOS = datetime(2017,1,25,12,4,0)
		sat9AOS = datetime(2017,1,25,13,0,0)
		sat9LOS = datetime(2017,1,25,13,4,0)
		sat10AOS = datetime(2017,1,25,12,27,0)
		sat10LOS = datetime(2017,1,25,12,31,0)
		sat11AOS = datetime(2017,1,25,12,28,0)
		sat11LOS = datetime(2017,1,25,12,34,0)

		sat1TLE = TLE(0,"sat1","line1","line2")
		sat2TLE = TLE(1,"sat2","line1","line2")
		sat3TLE = TLE(2,"sat3","line1","line2")
		sat4TLE = TLE(3,"sat4","line1","line2")
		sat5TLE = TLE(4,"sat5","line1","line2")
		sat6TLE = TLE(5,"sat6","line1","line2")
		sat7TLE = TLE(6,"sat7","line1","line2")
		sat8TLE = TLE(7,"sat8","line1","line2")
		sat9TLE = TLE(8,"sat9","line1","line2")
		sat10TLE = TLE(9,"sat10","line1","line2")
		sat11TLE = TLE(10,"sat11","line1","line2")

		sat1 = NextPass(0,sat1TLE,sat1AOS, sat1LOS, 0,0,0,0)
		sat2 = NextPass(1,sat2TLE,sat2AOS, sat2LOS, 0,0,0,0)
		sat3 = NextPass(2,sat3TLE,sat3AOS, sat3LOS, 0,0,0,0)
		sat4 = NextPass(3,sat4TLE,sat4AOS, sat4LOS, 0,0,0,0)
		sat5 = NextPass(4,sat5TLE,sat5AOS, sat5LOS, 0,0,0,0)
		sat6 = NextPass(5,sat6TLE,sat6AOS, sat6LOS, 0,0,0,0)
		sat7 = NextPass(6,sat7TLE,sat7AOS, sat7LOS, 0,0,0,0)
		sat8 = NextPass(7,sat8TLE,sat8AOS, sat8LOS, 0,0,0,0)
		sat9 = NextPass(8,sat9TLE,sat9AOS, sat9LOS, 0,0,0,0)
		sat10 = NextPass(9,sat10TLE,sat10AOS,sat10LOS, 0,0,0,0)
		sat11 = NextPass(10,sat11TLE,sat11AOS,sat11LOS, 0,0,0,0)

		satList=[sat1,sat2,sat3,sat4,sat5,sat6,sat7,sat8,sat9,sat10,sat11]

		usefulTime=3
		shouldBe,nextPassList=_Helper.fitnessFunction(satList,usefulTime)

		self.assertIs(shouldBe == 4,True)

	def test_fitnessFunction_many_fake_sats_but_diff(self):

		sat1AOS = datetime(2017,1,25,12,2,0)
		sat1LOS = datetime(2017,1,25,12,5,0)
		sat2AOS = datetime(2017,1,25,12,0,0)
		sat2LOS = datetime(2017,1,25,12,8,0)
		sat3AOS = datetime(2017,1,25,12,25,0)
		sat3LOS = datetime(2017,1,25,12,30,0)
		sat4AOS = datetime(2017,1,25,11,57,0)
		sat4LOS = datetime(2017,1,25,12,3,0)
		sat5AOS = datetime(2017,1,25,12,7,0)
		sat5LOS = datetime(2017,1,25,12,10,0)
		sat6AOS = datetime(2017,1,25,11,57,0)
		sat6LOS = datetime(2017,1,25,12,4,0)
		sat7AOS = datetime(2017,1,25,11,57,0)
		sat7LOS = datetime(2017,1,25,12,4,0)
		sat8AOS = datetime(2017,1,25,12,59,0)
		sat8LOS = datetime(2017,1,25,13,3,0)
		sat9AOS = datetime(2017,1,25,13,0,0)
		sat9LOS = datetime(2017,1,25,13,4,0)
		sat10AOS = datetime(2017,1,25,12,27,0)
		sat10LOS = datetime(2017,1,25,12,31,0)
		sat11AOS = datetime(2017,1,25,12,28,0)
		sat11LOS = datetime(2017,1,25,12,34,0)

		sat1TLE = TLE(0,"sat1","line1","line2")
		sat2TLE = TLE(1,"sat2","line1","line2")
		sat3TLE = TLE(2,"sat3","line1","line2")
		sat4TLE = TLE(3,"sat4","line1","line2")
		sat5TLE = TLE(4,"sat5","line1","line2")
		sat6TLE = TLE(5,"sat6","line1","line2")
		sat7TLE = TLE(6,"sat7","line1","line2")
		sat8TLE = TLE(7,"sat8","line1","line2")
		sat9TLE = TLE(8,"sat9","line1","line2")
		sat10TLE = TLE(9,"sat10","line1","line2")
		sat11TLE = TLE(10,"sat11","line1","line2")

		sat1 = NextPass(0,sat1TLE,sat1AOS, sat1LOS, 0,0,0,0)
		sat2 = NextPass(1,sat2TLE,sat2AOS, sat2LOS, 0,0,0,0)
		sat3 = NextPass(2,sat3TLE,sat3AOS, sat3LOS, 0,0,0,0)
		sat4 = NextPass(3,sat4TLE,sat4AOS, sat4LOS, 0,0,0,0)
		sat5 = NextPass(4,sat5TLE,sat5AOS, sat5LOS, 0,0,0,0)
		sat6 = NextPass(5,sat6TLE,sat6AOS, sat6LOS, 0,0,0,0)
		sat7 = NextPass(6,sat7TLE,sat7AOS, sat7LOS, 0,0,0,0)
		sat8 = NextPass(7,sat8TLE,sat8AOS, sat8LOS, 0,0,0,0)
		sat9 = NextPass(8,sat9TLE,sat9AOS, sat9LOS, 0,0,0,0)
		sat10 = NextPass(9,sat10TLE,sat10AOS,sat10LOS, 0,0,0,0)
		sat11 = NextPass(10,sat11TLE,sat11AOS,sat11LOS, 0,0,0,0)

		satList=[sat1,sat2,sat3,sat4,sat5,sat6,sat7,sat8,sat9,sat10,sat11]
		usefulTime=3
		shouldBe,nextPassList=_Helper.fitnessFunction(satList,usefulTime)
		print(shouldBe)
		self.assertIs(shouldBe == 4,True)


class HillClimbingSimpleTests(TestCase):
	def test_simple_many_fake_sats(self):
		sat1AOS = datetime(2017,1,25,12,2,0)
		sat1LOS = datetime(2017,1,25,12,5,0)
		sat2AOS = datetime(2017,1,25,12,0,0)
		sat2LOS = datetime(2017,1,25,12,8,0)
		sat3AOS = datetime(2017,1,25,12,25,0)
		sat3LOS = datetime(2017,1,25,12,30,0)
		sat4AOS = datetime(2017,1,25,11,57,0)
		sat4LOS = datetime(2017,1,25,12,3,0)
		sat5AOS = datetime(2017,1,25,12,7,0)
		sat5LOS = datetime(2017,1,25,12,10,0)
		sat6AOS = datetime(2017,1,25,11,57,0)
		sat6LOS = datetime(2017,1,25,12,4,0)
		sat7AOS = datetime(2017,1,25,11,57,0)
		sat7LOS = datetime(2017,1,25,12,4,0)
		sat8AOS = datetime(2017,1,25,11,57,0)
		sat8LOS = datetime(2017,1,25,12,4,0)
		sat9AOS = datetime(2017,1,25,13,0,0)
		sat9LOS = datetime(2017,1,25,13,4,0)
		sat10AOS = datetime(2017,1,25,12,27,0)
		sat10LOS = datetime(2017,1,25,12,31,0)
		sat11AOS = datetime(2017,1,25,12,28,0)
		sat11LOS = datetime(2017,1,25,12,34,0)

		sat1TLE = TLE(0,"sat1","line1","line2")
		sat2TLE = TLE(1,"sat2","line1","line2")
		sat3TLE = TLE(2,"sat3","line1","line2")
		sat4TLE = TLE(3,"sat4","line1","line2")
		sat5TLE = TLE(4,"sat5","line1","line2")
		sat6TLE = TLE(5,"sat6","line1","line2")
		sat7TLE = TLE(6,"sat7","line1","line2")
		sat8TLE = TLE(7,"sat8","line1","line2")
		sat9TLE = TLE(8,"sat9","line1","line2")
		sat10TLE = TLE(9,"sat10","line1","line2")
		sat11TLE = TLE(10,"sat11","line1","line2")

		sat1 = NextPass(0,sat1TLE,sat1AOS, sat1LOS, 0,0,0,0)
		sat2 = NextPass(1,sat2TLE,sat2AOS, sat2LOS, 0,0,0,0)
		sat3 = NextPass(2,sat3TLE,sat3AOS, sat3LOS, 0,0,0,0)
		sat4 = NextPass(3,sat4TLE,sat4AOS, sat4LOS, 0,0,0,0)
		sat5 = NextPass(4,sat5TLE,sat5AOS, sat5LOS, 0,0,0,0)
		sat6 = NextPass(5,sat6TLE,sat6AOS, sat6LOS, 0,0,0,0)
		sat7 = NextPass(6,sat7TLE,sat7AOS, sat7LOS, 0,0,0,0)
		sat8 = NextPass(7,sat8TLE,sat8AOS, sat8LOS, 0,0,0,0)
		sat9 = NextPass(8,sat9TLE,sat9AOS, sat9LOS, 0,0,0,0)
		sat10 = NextPass(9,sat10TLE,sat10AOS,sat10LOS, 0,0,0,0)
		sat11 = NextPass(10,sat11TLE,sat11AOS,sat11LOS, 0,0,0,0)

		satList=[sat1,sat2,sat3,sat4,sat5,sat6,sat7,sat8,sat9,sat10,sat11]
		usefulTime=3
		shouldBe,nextPassList=HillClimbing.simple(satList,usefulTime)
		#print(order)
		print(shouldBe)
		#willitalwaysbefour?
		self.assertIs(shouldBe == 4,True)
	

	def test_simple_many_fake_sats_diff(self):

		sat1AOS = datetime(2017,1,25,12,2,0)
		sat1LOS = datetime(2017,1,25,12,5,0)
		sat2AOS = datetime(2017,1,25,12,0,0)
		sat2LOS = datetime(2017,1,25,12,8,0)
		sat3AOS = datetime(2017,1,25,12,25,0)
		sat3LOS = datetime(2017,1,25,12,30,0)
		sat4AOS = datetime(2017,1,25,11,57,0)
		sat4LOS = datetime(2017,1,25,12,3,0)
		sat5AOS = datetime(2017,1,25,12,7,0)
		sat5LOS = datetime(2017,1,25,12,10,0)
		sat6AOS = datetime(2017,1,25,11,57,0)
		sat6LOS = datetime(2017,1,25,12,4,0)
		sat7AOS = datetime(2017,1,25,11,57,0)
		sat7LOS = datetime(2017,1,25,12,4,0)
		sat8AOS = datetime(2017,1,25,11,57,0)
		sat8LOS = datetime(2017,1,25,12,4,0)
		sat9AOS = datetime(2017,1,25,11,57,0)
		sat9LOS = datetime(2017,1,25,12,4,0)
		# sat10AOS = datetime(2017,1,25,12,27,0)
		# sat10LOS = datetime(2017,1,25,12,31,0)
		# sat11AOS = datetime(2017,1,25,12,28,0)
		# sat11LOS = datetime(2017,1,25,12,34,0)

		sat1TLE = TLE(0,"sat1","line1","line2")
		sat2TLE = TLE(1,"sat2","line1","line2")
		sat3TLE = TLE(2,"sat3","line1","line2")
		sat4TLE = TLE(3,"sat4","line1","line2")
		sat5TLE = TLE(4,"sat5","line1","line2")
		sat6TLE = TLE(5,"sat6","line1","line2")
		sat7TLE = TLE(6,"sat7","line1","line2")
		sat8TLE = TLE(7,"sat8","line1","line2")
		sat9TLE = TLE(8,"sat9","line1","line2")
		# sat10TLE = TLE(9,"sat10","line1","line2")
		# sat11TLE = TLE(10,"sat11","line1","line2")

		sat1 = NextPass(0,sat1TLE,sat1AOS, sat1LOS, 0,0,0,0)
		sat2 = NextPass(1,sat2TLE,sat2AOS, sat2LOS, 0,0,0,0)
		sat3 = NextPass(2,sat3TLE,sat3AOS, sat3LOS, 0,0,0,0)
		sat4 = NextPass(3,sat4TLE,sat4AOS, sat4LOS, 0,0,0,0)
		sat5 = NextPass(4,sat5TLE,sat5AOS, sat5LOS, 0,0,0,0)
		sat6 = NextPass(5,sat6TLE,sat6AOS, sat6LOS, 0,0,0,0)
		sat7 = NextPass(6,sat7TLE,sat7AOS, sat7LOS, 0,0,0,0)
		sat8 = NextPass(7,sat8TLE,sat8AOS, sat8LOS, 0,0,0,0)
		sat9 = NextPass(8,sat9TLE,sat9AOS, sat9LOS, 0,0,0,0)
		# sat10 = NextPass(9,sat10TLE,sat10AOS,sat10LOS, 0,0,0,0)
		# sat11 = NextPass(10,sat11TLE,sat11AOS,sat11LOS, 0,0,0,0)

		satList=[sat1,sat2,sat3,sat4,sat5,sat6,sat7,sat8,sat9]
		usefulTime=3
		shouldBe,nextPassList=HillClimbing.simple(satList,usefulTime)
		#print(order)
		
		#willitalwaysbefour?
		self.assertIs(shouldBe == 5,True)


	def test_simple_many_real_sats(self):
		catAOS = datetime(2017,1,25,0,52,59)
		catLOS = datetime(2017,1,25,1,4,28)
		sixtysevenCAOS = datetime(2017,1,25,0,6,52)
		sixtysevenCLOS = datetime(2017,1,25,0,14,42)
		sixtysevenDAOS = datetime(2017,1,25,0,8,37)
		sixtysevenDLOS = datetime(2017,1,25,0,16,18)
		aistAOS = datetime(2017,1,25,0,35,21)
		aistLOS = datetime(2017,1,25,0,48,8)
		beesatAOS = datetime(2017,1,25,0,46,48)
		beesatLOS = datetime(2017,1,25,1,0,4) 
		briteAOS = datetime(2017,1,25,0,19,39)
		briteLOS = datetime(2017,1,25,0,30,4)
		cubebugAOS = datetime(2017,1,25,0,41,54)
		cubebugLOS = datetime(2017,1,25,0,52,49)
		sailAOS = datetime(2017,1,25,0,41,17)
		sailLOS = datetime(2017,1,25,0,53,28)
		eagleAOS = datetime(2017,1,25,0,53,13)
		eagleLOS = datetime(2017,1,25,1,2,56)	
		exoAOS = datetime(2017,1,25,0,57,27)
		exoLOS = datetime(2017,1,25,1,5,27)
		fconeAOS = datetime(2017,1,25,0,17,14)
		fconeLOS = datetime(2017,1,25,0,30,6)
		fcthreeAOS = datetime(2017,1,25,0,11,3)
		fcthreeLOS = datetime(2017,1,25,0,23,54)
		fcfiveAOS = datetime(2017,1,25,0,8,47)
		fcfiveLOS = datetime(2017,1,25,0,21,37)
		fceightAOS = datetime(2017,1,25,0,52,35)
		fceightLOS = datetime(2017,1,25,1,5,21)
		fcnineAOS = datetime(2017,1,25,0,50,43)
		fcnineLOS = datetime(2017,1,25,1,3,31)
		fctenAOS = datetime(2017,1,25,0,53,57)
		fctenLOS = datetime(2017,1,25,1,6,40)
		fcelevenAOS = datetime(2017,1,25,0,59,45)
		fcelevenLOS = datetime(2017,1,25,1,12,25)	
		fethirteenAOS = datetime(2017,1,25,1,7,32)
		fethirteenLOS = datetime(2017,1,25,1,15,6)	
		fefourteenAOS = datetime(2017,1,25,0,0,33)
		fefourteenLOS = datetime(2017,1,25,0,8,13)	
		itupAOS = datetime(2017,1,25,0,22,12)
		itupLOS = datetime(2017,1,25,0,34,49)	

	#09 

		catTLE = TLE(0,"cat","line1","line2")
		sixtysevenCTLE = TLE(1,"sixtysevenC","line1","line2")
		sixtysevenDTLE= TLE(1,"sixtysevenD","line1","line2")
		aistTLE= TLE(1,"aist","line1","line2")
		beesatTLE= TLE(1,"beesat","line1","line2")
		briteTLE= TLE(1,"brite","line1","line2")
		cubebugTLE= TLE(1,"cubebug","line1","line2")
		sailTLE= TLE(1,"sail","line1","line2")
		eagleTLE= TLE(1,"eagle","line1","line2")
		exoTLE= TLE(1,"exo","line1","line2")
		fconeTLE= TLE(1,"fcone","line1","line2")
		fcthreeTLE= TLE(1,"fcthree","line1","line2")
		fcfiveTLE= TLE(1,"fcfive","line1","line2")
		fceightTLE	= TLE(1,"fceight","line1","line2")
		fcnineTLE= TLE(1,"fcnine","line1","line2")
		fctenTLE= TLE(1,"fcten","line1","line2")
		fcelevenTLE= TLE(1,"fceleven","line1","line2")
		fethirteenTLE= TLE(1,"fethirteen","line1","line2")
		fefourteenTLE= TLE(1,"fefourteen","line1","line2")
		itupTLE= TLE(1,"itup","line1","line2")

		date1 = datetime(2017, 1, 1, 12, 0, 0)
			# id, tle, riseTime, setTime, duration, maxElevation, riseAzimuth, setAzimuth
		cat = NextPass(0,catTLE, catAOS, catLOS, 0,0,0,0)
		sixtysevenC = NextPass(1,sixtysevenCTLE,sixtysevenCAOS, sixtysevenCLOS,date1,date1,date1,date1)
		sixtysevenD = NextPass(2,sixtysevenDTLE,sixtysevenDAOS, sixtysevenDLOS,date1,date1,date1,date1)
		aist = NextPass(3,aistTLE,aistAOS, aistLOS,date1,date1,date1,date1)
		beesat = NextPass(4,beesatTLE,beesatAOS, beesatLOS,date1,date1,date1,date1)
		brite = NextPass(5,briteTLE,briteAOS, briteLOS,date1,date1,date1,date1)
		cubebug = NextPass(6,cubebugTLE,cubebugAOS, cubebugLOS,date1,date1,date1,date1)
		sail = NextPass(7,sailTLE,sailAOS, sailLOS,date1,date1,date1,date1)
		eagle = NextPass(8,eagleTLE,eagleAOS, eagleLOS,date1,date1,date1,date1)
		exo = NextPass(9,exoTLE,exoAOS,exoLOS,date1,date1,date1,date1)
		fcone = NextPass(10,fconeTLE,fconeAOS,fconeLOS,date1,date1,date1,date1)
		fcthree = NextPass(11,fcthreeTLE,fcthreeAOS, fcthreeLOS,date1,date1,date1,date1)
		fcfive = NextPass(12,fcfiveTLE,fcfiveAOS, fcfiveLOS,date1,date1,date1,date1)
		fceight = NextPass(13,fceightTLE,fceightAOS,fceightLOS,date1,date1,date1,date1)
		fcnine = NextPass(14,fcnineTLE,fcnineAOS,fcnineLOS,date1,date1,date1,date1)
		fcten = NextPass(15,fctenTLE,fctenAOS, fctenLOS,date1,date1,date1,date1)
		fceleven = NextPass(16,fcelevenTLE,fcelevenAOS, fcelevenLOS,date1,date1,date1,date1)
		fethirteen = NextPass(17,fethirteenTLE,fethirteenAOS,fethirteenLOS,date1,date1,date1,date1)
		fefourteen = NextPass(18,fefourteenTLE,fefourteenAOS,fefourteenLOS,date1,date1,date1,date1)
		itup = NextPass(19,itupTLE,itupAOS, itupLOS,date1,date1,date1,date1)		

		satList=[sixtysevenC,sixtysevenD,aist,beesat,brite,cubebug,sail,eagle,
		exo,fcone,fcthree,fcfive,fceight,fcnine,fcten,fceleven,fethirteen,fefourteen,
		itup]
		usefulTime=3
		shouldBe,nextPassList=HillClimbing.simple(satList,usefulTime)

		print(shouldBe)
		
		# for o in order:
		# 	print(o)
		# if type(order) is list:
		# 	print ("it's a list")

		# shouldBe,nextPassList=_Helper.fitnessFunction(list(order))
		# print(shouldBe)
		# print(nextPassList)
		#willitalwaysbefour?  was 6?
		self.assertIs(4<shouldBe<8,True)


class HillClimbingSteepestTests(TestCase):
	def test_steepest_many_fake_sats(self):
		sat1AOS = datetime(2017,1,25,12,2,0)
		sat1LOS = datetime(2017,1,25,12,5,0)
		sat2AOS = datetime(2017,1,25,12,0,0)
		sat2LOS = datetime(2017,1,25,12,8,0)
		sat3AOS = datetime(2017,1,25,12,25,0)
		sat3LOS = datetime(2017,1,25,12,30,0)
		sat4AOS = datetime(2017,1,25,11,57,0)
		sat4LOS = datetime(2017,1,25,12,3,0)
		sat5AOS = datetime(2017,1,25,12,7,0)
		sat5LOS = datetime(2017,1,25,12,10,0)
		sat6AOS = datetime(2017,1,25,11,57,0)
		sat6LOS = datetime(2017,1,25,12,4,0)
		sat7AOS = datetime(2017,1,25,11,57,0)
		sat7LOS = datetime(2017,1,25,12,4,0)
		sat8AOS = datetime(2017,1,25,11,57,0)
		sat8LOS = datetime(2017,1,25,12,4,0)
		sat9AOS = datetime(2017,1,25,13,0,0)
		sat9LOS = datetime(2017,1,25,13,4,0)
		sat10AOS = datetime(2017,1,25,12,27,0)
		sat10LOS = datetime(2017,1,25,12,31,0)
		sat11AOS = datetime(2017,1,25,12,28,0)
		sat11LOS = datetime(2017,1,25,12,34,0)

		sat1TLE = TLE(0,"sat1","line1","line2")
		sat2TLE = TLE(1,"sat2","line1","line2")
		sat3TLE = TLE(2,"sat3","line1","line2")
		sat4TLE = TLE(3,"sat4","line1","line2")
		sat5TLE = TLE(4,"sat5","line1","line2")
		sat6TLE = TLE(5,"sat6","line1","line2")
		sat7TLE = TLE(6,"sat7","line1","line2")
		sat8TLE = TLE(7,"sat8","line1","line2")
		sat9TLE = TLE(8,"sat9","line1","line2")
		sat10TLE = TLE(9,"sat10","line1","line2")
		sat11TLE = TLE(10,"sat11","line1","line2")

		sat1 = NextPass(0,sat1TLE,sat1AOS, sat1LOS, 0,0,0,0)
		sat2 = NextPass(1,sat2TLE,sat2AOS, sat2LOS, 0,0,0,0)
		sat3 = NextPass(2,sat3TLE,sat3AOS, sat3LOS, 0,0,0,0)
		sat4 = NextPass(3,sat4TLE,sat4AOS, sat4LOS, 0,0,0,0)
		sat5 = NextPass(4,sat5TLE,sat5AOS, sat5LOS, 0,0,0,0)
		sat6 = NextPass(5,sat6TLE,sat6AOS, sat6LOS, 0,0,0,0)
		sat7 = NextPass(6,sat7TLE,sat7AOS, sat7LOS, 0,0,0,0)
		sat8 = NextPass(7,sat8TLE,sat8AOS, sat8LOS, 0,0,0,0)
		sat9 = NextPass(8,sat9TLE,sat9AOS, sat9LOS, 0,0,0,0)
		sat10 = NextPass(9,sat10TLE,sat10AOS,sat10LOS, 0,0,0,0)
		sat11 = NextPass(10,sat11TLE,sat11AOS,sat11LOS, 0,0,0,0)

		satList=[sat1,sat2,sat3,sat4,sat5,sat6,sat7,sat8,sat9,sat10,sat11]
		usefulTime=3
		shouldBe,nextPassList=HillClimbing.steepest(satList,usefulTime)
		#print(order)
		print(shouldBe)
		#willitalwaysbefour?
		self.assertIs(shouldBe == 4,True)
	

	def test_steepest_many_fake_sats_diff(self):

		sat1AOS = datetime(2017,1,25,12,2,0)
		sat1LOS = datetime(2017,1,25,12,5,0)
		sat2AOS = datetime(2017,1,25,12,0,0)
		sat2LOS = datetime(2017,1,25,12,8,0)
		sat3AOS = datetime(2017,1,25,12,25,0)
		sat3LOS = datetime(2017,1,25,12,30,0)
		sat4AOS = datetime(2017,1,25,11,57,0)
		sat4LOS = datetime(2017,1,25,12,3,0)
		sat5AOS = datetime(2017,1,25,12,7,0)
		sat5LOS = datetime(2017,1,25,12,10,0)
		sat6AOS = datetime(2017,1,25,11,57,0)
		sat6LOS = datetime(2017,1,25,12,4,0)
		sat7AOS = datetime(2017,1,25,11,57,0)
		sat7LOS = datetime(2017,1,25,12,4,0)
		sat8AOS = datetime(2017,1,25,11,57,0)
		sat8LOS = datetime(2017,1,25,12,4,0)
		sat9AOS = datetime(2017,1,25,11,57,0)
		sat9LOS = datetime(2017,1,25,12,4,0)
		# sat10AOS = datetime(2017,1,25,12,27,0)
		# sat10LOS = datetime(2017,1,25,12,31,0)
		# sat11AOS = datetime(2017,1,25,12,28,0)
		# sat11LOS = datetime(2017,1,25,12,34,0)

		sat1TLE = TLE(0,"sat1","line1","line2")
		sat2TLE = TLE(1,"sat2","line1","line2")
		sat3TLE = TLE(2,"sat3","line1","line2")
		sat4TLE = TLE(3,"sat4","line1","line2")
		sat5TLE = TLE(4,"sat5","line1","line2")
		sat6TLE = TLE(5,"sat6","line1","line2")
		sat7TLE = TLE(6,"sat7","line1","line2")
		sat8TLE = TLE(7,"sat8","line1","line2")
		sat9TLE = TLE(8,"sat9","line1","line2")
		# sat10TLE = TLE(9,"sat10","line1","line2")
		# sat11TLE = TLE(10,"sat11","line1","line2")

		sat1 = NextPass(0,sat1TLE,sat1AOS, sat1LOS, 0,0,0,0)
		sat2 = NextPass(1,sat2TLE,sat2AOS, sat2LOS, 0,0,0,0)
		sat3 = NextPass(2,sat3TLE,sat3AOS, sat3LOS, 0,0,0,0)
		sat4 = NextPass(3,sat4TLE,sat4AOS, sat4LOS, 0,0,0,0)
		sat5 = NextPass(4,sat5TLE,sat5AOS, sat5LOS, 0,0,0,0)
		sat6 = NextPass(5,sat6TLE,sat6AOS, sat6LOS, 0,0,0,0)
		sat7 = NextPass(6,sat7TLE,sat7AOS, sat7LOS, 0,0,0,0)
		sat8 = NextPass(7,sat8TLE,sat8AOS, sat8LOS, 0,0,0,0)
		sat9 = NextPass(8,sat9TLE,sat9AOS, sat9LOS, 0,0,0,0)
		# sat10 = NextPass(9,sat10TLE,sat10AOS,sat10LOS, 0,0,0,0)
		# sat11 = NextPass(10,sat11TLE,sat11AOS,sat11LOS, 0,0,0,0)

		satList=[sat1,sat2,sat3,sat4,sat5,sat6,sat7,sat8,sat9]
		usefulTime=3
		shouldBe,nextPassList=HillClimbing.steepest(satList,usefulTime)
		#print(order)
		print(shouldBe)
		#willitalwaysbefour?
		self.assertIs(shouldBe == 5,True)

	def test_steepest_many_real_sats(self):
		catAOS = datetime(2017,1,25,0,52,59)
		catLOS = datetime(2017,1,25,1,4,28)
		sixtysevenCAOS = datetime(2017,1,25,0,6,52)
		sixtysevenCLOS = datetime(2017,1,25,0,14,42)
		sixtysevenDAOS = datetime(2017,1,25,0,8,37)
		sixtysevenDLOS = datetime(2017,1,25,0,16,18)
		aistAOS = datetime(2017,1,25,0,35,21)
		aistLOS = datetime(2017,1,25,0,48,8)
		beesatAOS = datetime(2017,1,25,0,46,48)
		beesatLOS = datetime(2017,1,25,1,0,4) 
		briteAOS = datetime(2017,1,25,0,19,39)
		briteLOS = datetime(2017,1,25,0,30,4)
		cubebugAOS = datetime(2017,1,25,0,41,54)
		cubebugLOS = datetime(2017,1,25,0,52,49)
		sailAOS = datetime(2017,1,25,0,41,17)
		sailLOS = datetime(2017,1,25,0,53,28)
		eagleAOS = datetime(2017,1,25,0,53,13)
		eagleLOS = datetime(2017,1,25,1,2,56)	
		exoAOS = datetime(2017,1,25,0,57,27)
		exoLOS = datetime(2017,1,25,1,5,27)
		fconeAOS = datetime(2017,1,25,0,17,14)
		fconeLOS = datetime(2017,1,25,0,30,6)
		fcthreeAOS = datetime(2017,1,25,0,11,3)
		fcthreeLOS = datetime(2017,1,25,0,23,54)
		fcfiveAOS = datetime(2017,1,25,0,8,47)
		fcfiveLOS = datetime(2017,1,25,0,21,37)
		fceightAOS = datetime(2017,1,25,0,52,35)
		fceightLOS = datetime(2017,1,25,1,5,21)
		fcnineAOS = datetime(2017,1,25,0,50,43)
		fcnineLOS = datetime(2017,1,25,1,3,31)
		fctenAOS = datetime(2017,1,25,0,53,57)
		fctenLOS = datetime(2017,1,25,1,6,40)
		fcelevenAOS = datetime(2017,1,25,0,59,45)
		fcelevenLOS = datetime(2017,1,25,1,12,25)	
		fethirteenAOS = datetime(2017,1,25,1,7,32)
		fethirteenLOS = datetime(2017,1,25,1,15,6)	
		fefourteenAOS = datetime(2017,1,25,0,0,33)
		fefourteenLOS = datetime(2017,1,25,0,8,13)	
		itupAOS = datetime(2017,1,25,0,22,12)
		itupLOS = datetime(2017,1,25,0,34,49)	

	#09 

		catTLE = TLE(0,"cat","line1","line2")
		sixtysevenCTLE = TLE(1,"sixtysevenC","line1","line2")
		sixtysevenDTLE= TLE(1,"sixtysevenD","line1","line2")
		aistTLE= TLE(1,"aist","line1","line2")
		beesatTLE= TLE(1,"beesat","line1","line2")
		briteTLE= TLE(1,"brite","line1","line2")
		cubebugTLE= TLE(1,"cubebug","line1","line2")
		sailTLE= TLE(1,"sail","line1","line2")
		eagleTLE= TLE(1,"eagle","line1","line2")
		exoTLE= TLE(1,"exo","line1","line2")
		fconeTLE= TLE(1,"fcone","line1","line2")
		fcthreeTLE= TLE(1,"fcthree","line1","line2")
		fcfiveTLE= TLE(1,"fcfive","line1","line2")
		fceightTLE	= TLE(1,"fceight","line1","line2")
		fcnineTLE= TLE(1,"fcnine","line1","line2")
		fctenTLE= TLE(1,"fcten","line1","line2")
		fcelevenTLE= TLE(1,"fceleven","line1","line2")
		fethirteenTLE= TLE(1,"fethirteen","line1","line2")
		fefourteenTLE= TLE(1,"fefourteen","line1","line2")
		itupTLE= TLE(1,"itup","line1","line2")

		date1 = datetime(2017, 1, 1, 12, 0, 0)
			# id, tle, riseTime, setTime, duration, maxElevation, riseAzimuth, setAzimuth
		cat = NextPass(0,catTLE, catAOS, catLOS, 0,0,0,0)
		sixtysevenC = NextPass(1,sixtysevenCTLE,sixtysevenCAOS, sixtysevenCLOS,date1,date1,date1,date1)
		sixtysevenD = NextPass(2,sixtysevenDTLE,sixtysevenDAOS, sixtysevenDLOS,date1,date1,date1,date1)
		aist = NextPass(3,aistTLE,aistAOS, aistLOS,date1,date1,date1,date1)
		beesat = NextPass(4,beesatTLE,beesatAOS, beesatLOS,date1,date1,date1,date1)
		brite = NextPass(5,briteTLE,briteAOS, briteLOS,date1,date1,date1,date1)
		cubebug = NextPass(6,cubebugTLE,cubebugAOS, cubebugLOS,date1,date1,date1,date1)
		sail = NextPass(7,sailTLE,sailAOS, sailLOS,date1,date1,date1,date1)
		eagle = NextPass(8,eagleTLE,eagleAOS, eagleLOS,date1,date1,date1,date1)
		exo = NextPass(9,exoTLE,exoAOS,exoLOS,date1,date1,date1,date1)
		fcone = NextPass(10,fconeTLE,fconeAOS,fconeLOS,date1,date1,date1,date1)
		fcthree = NextPass(11,fcthreeTLE,fcthreeAOS, fcthreeLOS,date1,date1,date1,date1)
		fcfive = NextPass(12,fcfiveTLE,fcfiveAOS, fcfiveLOS,date1,date1,date1,date1)
		fceight = NextPass(13,fceightTLE,fceightAOS,fceightLOS,date1,date1,date1,date1)
		fcnine = NextPass(14,fcnineTLE,fcnineAOS,fcnineLOS,date1,date1,date1,date1)
		fcten = NextPass(15,fctenTLE,fctenAOS, fctenLOS,date1,date1,date1,date1)
		fceleven = NextPass(16,fcelevenTLE,fcelevenAOS, fcelevenLOS,date1,date1,date1,date1)
		fethirteen = NextPass(17,fethirteenTLE,fethirteenAOS,fethirteenLOS,date1,date1,date1,date1)
		fefourteen = NextPass(18,fefourteenTLE,fefourteenAOS,fefourteenLOS,date1,date1,date1,date1)
		itup = NextPass(19,itupTLE,itupAOS, itupLOS,date1,date1,date1,date1)		

		satList=[cat,sixtysevenC,sixtysevenD,aist,beesat,brite,cubebug,sail,eagle,
		exo,fcone,fcthree,fcfive,fceight,fcnine,fcten,fceleven,fethirteen,fefourteen,
		itup]
		usefulTime=3
		shouldBe,nextPassList=HillClimbing.steepest(satList,usefulTime)
		#print(order)
		print("{} steep real".format(shouldBe))
		#willitalwaysbefour?  6,7
		self.assertIs(5<shouldBe<8,True)
	
	
class HillClimbingStochasticTests(TestCase):
	def test_stochastic_many_fake_sats(self):
		sat1AOS = datetime(2017,1,25,12,2,0)
		sat1LOS = datetime(2017,1,25,12,5,0)
		sat2AOS = datetime(2017,1,25,12,0,0)
		sat2LOS = datetime(2017,1,25,12,8,0)
		sat3AOS = datetime(2017,1,25,12,25,0)
		sat3LOS = datetime(2017,1,25,12,30,0)
		sat4AOS = datetime(2017,1,25,11,57,0)
		sat4LOS = datetime(2017,1,25,12,3,0)
		sat5AOS = datetime(2017,1,25,12,7,0)
		sat5LOS = datetime(2017,1,25,12,10,0)
		sat6AOS = datetime(2017,1,25,11,57,0)
		sat6LOS = datetime(2017,1,25,12,4,0)
		sat7AOS = datetime(2017,1,25,11,57,0)
		sat7LOS = datetime(2017,1,25,12,4,0)
		sat8AOS = datetime(2017,1,25,11,57,0)
		sat8LOS = datetime(2017,1,25,12,4,0)
		sat9AOS = datetime(2017,1,25,13,0,0)
		sat9LOS = datetime(2017,1,25,13,4,0)
		sat10AOS = datetime(2017,1,25,12,27,0)
		sat10LOS = datetime(2017,1,25,12,31,0)
		sat11AOS = datetime(2017,1,25,12,28,0)
		sat11LOS = datetime(2017,1,25,12,34,0)

		sat1TLE = TLE(0,"sat1","line1","line2")
		sat2TLE = TLE(1,"sat2","line1","line2")
		sat3TLE = TLE(2,"sat3","line1","line2")
		sat4TLE = TLE(3,"sat4","line1","line2")
		sat5TLE = TLE(4,"sat5","line1","line2")
		sat6TLE = TLE(5,"sat6","line1","line2")
		sat7TLE = TLE(6,"sat7","line1","line2")
		sat8TLE = TLE(7,"sat8","line1","line2")
		sat9TLE = TLE(8,"sat9","line1","line2")
		sat10TLE = TLE(9,"sat10","line1","line2")
		sat11TLE = TLE(10,"sat11","line1","line2")

		sat1 = NextPass(0,sat1TLE,sat1AOS, sat1LOS, 0,0,0,0)
		sat2 = NextPass(1,sat2TLE,sat2AOS, sat2LOS, 0,0,0,0)
		sat3 = NextPass(2,sat3TLE,sat3AOS, sat3LOS, 0,0,0,0)
		sat4 = NextPass(3,sat4TLE,sat4AOS, sat4LOS, 0,0,0,0)
		sat5 = NextPass(4,sat5TLE,sat5AOS, sat5LOS, 0,0,0,0)
		sat6 = NextPass(5,sat6TLE,sat6AOS, sat6LOS, 0,0,0,0)
		sat7 = NextPass(6,sat7TLE,sat7AOS, sat7LOS, 0,0,0,0)
		sat8 = NextPass(7,sat8TLE,sat8AOS, sat8LOS, 0,0,0,0)
		sat9 = NextPass(8,sat9TLE,sat9AOS, sat9LOS, 0,0,0,0)
		sat10 = NextPass(9,sat10TLE,sat10AOS,sat10LOS, 0,0,0,0)
		sat11 = NextPass(10,sat11TLE,sat11AOS,sat11LOS, 0,0,0,0)

		satList=[sat1,sat2,sat3,sat4,sat5,sat6,sat7,sat8,sat9,sat10,sat11]
		usefulTime=3
		shouldBe,nextPassList=HillClimbing.stochastic(satList,usefulTime)
		#print(order)
		print("{} sto fake".format(shouldBe))
		#willitalwaysbefour? 4?
		self.assertIs(0<shouldBe<4,True)
	

	def test_stochastic_many_fake_sats_diff(self):

		sat1AOS = datetime(2017,1,25,12,2,0)
		sat1LOS = datetime(2017,1,25,12,5,0)
		sat2AOS = datetime(2017,1,25,12,0,0)
		sat2LOS = datetime(2017,1,25,12,8,0)
		sat3AOS = datetime(2017,1,25,12,25,0)
		sat3LOS = datetime(2017,1,25,12,30,0)
		sat4AOS = datetime(2017,1,25,11,57,0)
		sat4LOS = datetime(2017,1,25,12,3,0)
		sat5AOS = datetime(2017,1,25,12,7,0)
		sat5LOS = datetime(2017,1,25,12,10,0)
		sat6AOS = datetime(2017,1,25,11,57,0)
		sat6LOS = datetime(2017,1,25,12,4,0)
		sat7AOS = datetime(2017,1,25,11,57,0)
		sat7LOS = datetime(2017,1,25,12,4,0)
		sat8AOS = datetime(2017,1,25,11,57,0)
		sat8LOS = datetime(2017,1,25,12,4,0)
		sat9AOS = datetime(2017,1,25,11,57,0)
		sat9LOS = datetime(2017,1,25,12,4,0)
		# sat10AOS = datetime(2017,1,25,12,27,0)
		# sat10LOS = datetime(2017,1,25,12,31,0)
		# sat11AOS = datetime(2017,1,25,12,28,0)
		# sat11LOS = datetime(2017,1,25,12,34,0)

		sat1TLE = TLE(0,"sat1","line1","line2")
		sat2TLE = TLE(1,"sat2","line1","line2")
		sat3TLE = TLE(2,"sat3","line1","line2")
		sat4TLE = TLE(3,"sat4","line1","line2")
		sat5TLE = TLE(4,"sat5","line1","line2")
		sat6TLE = TLE(5,"sat6","line1","line2")
		sat7TLE = TLE(6,"sat7","line1","line2")
		sat8TLE = TLE(7,"sat8","line1","line2")
		sat9TLE = TLE(8,"sat9","line1","line2")
		# sat10TLE = TLE(9,"sat10","line1","line2")
		# sat11TLE = TLE(10,"sat11","line1","line2")

		sat1 = NextPass(0,sat1TLE,sat1AOS, sat1LOS, 0,0,0,0)
		sat2 = NextPass(1,sat2TLE,sat2AOS, sat2LOS, 0,0,0,0)
		sat3 = NextPass(2,sat3TLE,sat3AOS, sat3LOS, 0,0,0,0)
		sat4 = NextPass(3,sat4TLE,sat4AOS, sat4LOS, 0,0,0,0)
		sat5 = NextPass(4,sat5TLE,sat5AOS, sat5LOS, 0,0,0,0)
		sat6 = NextPass(5,sat6TLE,sat6AOS, sat6LOS, 0,0,0,0)
		sat7 = NextPass(6,sat7TLE,sat7AOS, sat7LOS, 0,0,0,0)
		sat8 = NextPass(7,sat8TLE,sat8AOS, sat8LOS, 0,0,0,0)
		sat9 = NextPass(8,sat9TLE,sat9AOS, sat9LOS, 0,0,0,0)
		# sat10 = NextPass(9,sat10TLE,sat10AOS,sat10LOS, 0,0,0,0)
		# sat11 = NextPass(10,sat11TLE,sat11AOS,sat11LOS, 0,0,0,0)

		satList=[sat1,sat2,sat3,sat4,sat5,sat6,sat7,sat8,sat9]
		usefulTime=3
		shouldBe,nextPassList=HillClimbing.stochastic(satList,usefulTime)
		#print(order)
		print("{} stoc diff".format(shouldBe))
		#willitalwaysbefour?
		self.assertIs(0<shouldBe<4,True)


	def test_stochastic_many_real_sats(self):
		catAOS = datetime(2017,1,25,0,52,59)
		catLOS = datetime(2017,1,25,1,4,28)
		sixtysevenCAOS = datetime(2017,1,25,0,6,52)
		sixtysevenCLOS = datetime(2017,1,25,0,14,42)
		sixtysevenDAOS = datetime(2017,1,25,0,8,37)
		sixtysevenDLOS = datetime(2017,1,25,0,16,18)
		aistAOS = datetime(2017,1,25,0,35,21)
		aistLOS = datetime(2017,1,25,0,48,8)
		beesatAOS = datetime(2017,1,25,0,46,48)
		beesatLOS = datetime(2017,1,25,1,0,4) 
		briteAOS = datetime(2017,1,25,0,19,39)
		briteLOS = datetime(2017,1,25,0,30,4)
		cubebugAOS = datetime(2017,1,25,0,41,54)
		cubebugLOS = datetime(2017,1,25,0,52,49)
		sailAOS = datetime(2017,1,25,0,41,17)
		sailLOS = datetime(2017,1,25,0,53,28)
		eagleAOS = datetime(2017,1,25,0,53,13)
		eagleLOS = datetime(2017,1,25,1,2,56)	
		exoAOS = datetime(2017,1,25,0,57,27)
		exoLOS = datetime(2017,1,25,1,5,27)
		fconeAOS = datetime(2017,1,25,0,17,14)
		fconeLOS = datetime(2017,1,25,0,30,6)
		fcthreeAOS = datetime(2017,1,25,0,11,3)
		fcthreeLOS = datetime(2017,1,25,0,23,54)
		fcfiveAOS = datetime(2017,1,25,0,8,47)
		fcfiveLOS = datetime(2017,1,25,0,21,37)
		fceightAOS = datetime(2017,1,25,0,52,35)
		fceightLOS = datetime(2017,1,25,1,5,21)
		fcnineAOS = datetime(2017,1,25,0,50,43)
		fcnineLOS = datetime(2017,1,25,1,3,31)
		fctenAOS = datetime(2017,1,25,0,53,57)
		fctenLOS = datetime(2017,1,25,1,6,40)
		fcelevenAOS = datetime(2017,1,25,0,59,45)
		fcelevenLOS = datetime(2017,1,25,1,12,25)	
		fethirteenAOS = datetime(2017,1,25,1,7,32)
		fethirteenLOS = datetime(2017,1,25,1,15,6)	
		fefourteenAOS = datetime(2017,1,25,0,0,33)
		fefourteenLOS = datetime(2017,1,25,0,8,13)	
		itupAOS = datetime(2017,1,25,0,22,12)
		itupLOS = datetime(2017,1,25,0,34,49)	

	#09 

		catTLE = TLE(0,"cat","line1","line2")
		sixtysevenCTLE = TLE(1,"sixtysevenC","line1","line2")
		sixtysevenDTLE= TLE(1,"sixtysevenD","line1","line2")
		aistTLE= TLE(1,"aist","line1","line2")
		beesatTLE= TLE(1,"beesat","line1","line2")
		briteTLE= TLE(1,"brite","line1","line2")
		cubebugTLE= TLE(1,"cubebug","line1","line2")
		sailTLE= TLE(1,"sail","line1","line2")
		eagleTLE= TLE(1,"eagle","line1","line2")
		exoTLE= TLE(1,"exo","line1","line2")
		fconeTLE= TLE(1,"fcone","line1","line2")
		fcthreeTLE= TLE(1,"fcthree","line1","line2")
		fcfiveTLE= TLE(1,"fcfive","line1","line2")
		fceightTLE	= TLE(1,"fceight","line1","line2")
		fcnineTLE= TLE(1,"fcnine","line1","line2")
		fctenTLE= TLE(1,"fcten","line1","line2")
		fcelevenTLE= TLE(1,"fceleven","line1","line2")
		fethirteenTLE= TLE(1,"fethirteen","line1","line2")
		fefourteenTLE= TLE(1,"fefourteen","line1","line2")
		itupTLE= TLE(1,"itup","line1","line2")

		date1 = datetime(2017, 1, 1, 12, 0, 0)
			# id, tle, riseTime, setTime, duration, maxElevation, riseAzimuth, setAzimuth
		cat = NextPass(0,catTLE, catAOS, catLOS, 0,0,0,0)
		sixtysevenC = NextPass(1,sixtysevenCTLE,sixtysevenCAOS, sixtysevenCLOS,date1,date1,date1,date1)
		sixtysevenD = NextPass(2,sixtysevenDTLE,sixtysevenDAOS, sixtysevenDLOS,date1,date1,date1,date1)
		aist = NextPass(3,aistTLE,aistAOS, aistLOS,date1,date1,date1,date1)
		beesat = NextPass(4,beesatTLE,beesatAOS, beesatLOS,date1,date1,date1,date1)
		brite = NextPass(5,briteTLE,briteAOS, briteLOS,date1,date1,date1,date1)
		cubebug = NextPass(6,cubebugTLE,cubebugAOS, cubebugLOS,date1,date1,date1,date1)
		sail = NextPass(7,sailTLE,sailAOS, sailLOS,date1,date1,date1,date1)
		eagle = NextPass(8,eagleTLE,eagleAOS, eagleLOS,date1,date1,date1,date1)
		exo = NextPass(9,exoTLE,exoAOS,exoLOS,date1,date1,date1,date1)
		fcone = NextPass(10,fconeTLE,fconeAOS,fconeLOS,date1,date1,date1,date1)
		fcthree = NextPass(11,fcthreeTLE,fcthreeAOS, fcthreeLOS,date1,date1,date1,date1)
		fcfive = NextPass(12,fcfiveTLE,fcfiveAOS, fcfiveLOS,date1,date1,date1,date1)
		fceight = NextPass(13,fceightTLE,fceightAOS,fceightLOS,date1,date1,date1,date1)
		fcnine = NextPass(14,fcnineTLE,fcnineAOS,fcnineLOS,date1,date1,date1,date1)
		fcten = NextPass(15,fctenTLE,fctenAOS, fctenLOS,date1,date1,date1,date1)
		fceleven = NextPass(16,fcelevenTLE,fcelevenAOS, fcelevenLOS,date1,date1,date1,date1)
		fethirteen = NextPass(17,fethirteenTLE,fethirteenAOS,fethirteenLOS,date1,date1,date1,date1)
		fefourteen = NextPass(18,fefourteenTLE,fefourteenAOS,fefourteenLOS,date1,date1,date1,date1)
		itup = NextPass(19,itupTLE,itupAOS, itupLOS,date1,date1,date1,date1)		

		satList=[cat,sixtysevenC,sixtysevenD,aist,beesat,brite,cubebug,sail,eagle,
		exo,fcone,fcthree,fcfive,fceight,fcnine,fcten,fceleven,fethirteen,fefourteen,
		itup]
		usefulTime=3
		shouldBe,nextPassList=HillClimbing.stochastic(satList,usefulTime)
		# for n in order:
		# 	print(n)
		print(shouldBe)

		self.assertIs(4<shouldBe<8,True)


class HillClimbingRandomRestartTests(TestCase):
	def test_randomrestart_many_fake_sats(self):
		sat1AOS = datetime(2017,1,25,12,2,0)
		sat1LOS = datetime(2017,1,25,12,5,0)
		sat2AOS = datetime(2017,1,25,12,0,0)
		sat2LOS = datetime(2017,1,25,12,8,0)
		sat3AOS = datetime(2017,1,25,12,25,0)
		sat3LOS = datetime(2017,1,25,12,30,0)
		sat4AOS = datetime(2017,1,25,11,57,0)
		sat4LOS = datetime(2017,1,25,12,3,0)
		sat5AOS = datetime(2017,1,25,12,7,0)
		sat5LOS = datetime(2017,1,25,12,10,0)
		sat6AOS = datetime(2017,1,25,11,57,0)
		sat6LOS = datetime(2017,1,25,12,4,0)
		sat7AOS = datetime(2017,1,25,11,57,0)
		sat7LOS = datetime(2017,1,25,12,4,0)
		sat8AOS = datetime(2017,1,25,11,57,0)
		sat8LOS = datetime(2017,1,25,12,4,0)
		sat9AOS = datetime(2017,1,25,13,0,0)
		sat9LOS = datetime(2017,1,25,13,4,0)
		sat10AOS = datetime(2017,1,25,12,27,0)
		sat10LOS = datetime(2017,1,25,12,31,0)
		sat11AOS = datetime(2017,1,25,12,28,0)
		sat11LOS = datetime(2017,1,25,12,34,0)

		sat1TLE = TLE(0,"sat1","line1","line2")
		sat2TLE = TLE(1,"sat2","line1","line2")
		sat3TLE = TLE(2,"sat3","line1","line2")
		sat4TLE = TLE(3,"sat4","line1","line2")
		sat5TLE = TLE(4,"sat5","line1","line2")
		sat6TLE = TLE(5,"sat6","line1","line2")
		sat7TLE = TLE(6,"sat7","line1","line2")
		sat8TLE = TLE(7,"sat8","line1","line2")
		sat9TLE = TLE(8,"sat9","line1","line2")
		sat10TLE = TLE(9,"sat10","line1","line2")
		sat11TLE = TLE(10,"sat11","line1","line2")

		sat1 = NextPass(0,sat1TLE,sat1AOS, sat1LOS, 0,0,0,0)
		sat2 = NextPass(1,sat2TLE,sat2AOS, sat2LOS, 0,0,0,0)
		sat3 = NextPass(2,sat3TLE,sat3AOS, sat3LOS, 0,0,0,0)
		sat4 = NextPass(3,sat4TLE,sat4AOS, sat4LOS, 0,0,0,0)
		sat5 = NextPass(4,sat5TLE,sat5AOS, sat5LOS, 0,0,0,0)
		sat6 = NextPass(5,sat6TLE,sat6AOS, sat6LOS, 0,0,0,0)
		sat7 = NextPass(6,sat7TLE,sat7AOS, sat7LOS, 0,0,0,0)
		sat8 = NextPass(7,sat8TLE,sat8AOS, sat8LOS, 0,0,0,0)
		sat9 = NextPass(8,sat9TLE,sat9AOS, sat9LOS, 0,0,0,0)
		sat10 = NextPass(9,sat10TLE,sat10AOS,sat10LOS, 0,0,0,0)
		sat11 = NextPass(10,sat11TLE,sat11AOS,sat11LOS, 0,0,0,0)

		satList=[sat1,sat2,sat3,sat4,sat5,sat6,sat7,sat8,sat9,sat10,sat11]
		usefulTime=3
		shouldBe,nextPassList=HillClimbing.randomRestart(satList,usefulTime)
		#print(order)
		print("{} from rr fake sats".format(shouldBe))
		#willitalwaysbefour?  4 or 5
		self.assertIs(0<shouldBe<4,True)
	

	def test_randomrestart_many_fake_sats_diff(self):

		sat1AOS = datetime(2017,1,25,12,2,0)
		sat1LOS = datetime(2017,1,25,12,5,0)
		sat2AOS = datetime(2017,1,25,12,0,0)
		sat2LOS = datetime(2017,1,25,12,8,0)
		sat3AOS = datetime(2017,1,25,12,25,0)
		sat3LOS = datetime(2017,1,25,12,30,0)
		sat4AOS = datetime(2017,1,25,11,57,0)
		sat4LOS = datetime(2017,1,25,12,3,0)
		sat5AOS = datetime(2017,1,25,12,7,0)
		sat5LOS = datetime(2017,1,25,12,10,0)
		sat6AOS = datetime(2017,1,25,11,57,0)
		sat6LOS = datetime(2017,1,25,12,4,0)
		sat7AOS = datetime(2017,1,25,11,57,0)
		sat7LOS = datetime(2017,1,25,12,4,0)
		sat8AOS = datetime(2017,1,25,11,57,0)
		sat8LOS = datetime(2017,1,25,12,4,0)
		sat9AOS = datetime(2017,1,25,11,57,0)
		sat9LOS = datetime(2017,1,25,12,4,0)
		# sat10AOS = datetime(2017,1,25,12,27,0)
		# sat10LOS = datetime(2017,1,25,12,31,0)
		# sat11AOS = datetime(2017,1,25,12,28,0)
		# sat11LOS = datetime(2017,1,25,12,34,0)

		sat1TLE = TLE(0,"sat1","line1","line2")
		sat2TLE = TLE(1,"sat2","line1","line2")
		sat3TLE = TLE(2,"sat3","line1","line2")
		sat4TLE = TLE(3,"sat4","line1","line2")
		sat5TLE = TLE(4,"sat5","line1","line2")
		sat6TLE = TLE(5,"sat6","line1","line2")
		sat7TLE = TLE(6,"sat7","line1","line2")
		sat8TLE = TLE(7,"sat8","line1","line2")
		sat9TLE = TLE(8,"sat9","line1","line2")
		# sat10TLE = TLE(9,"sat10","line1","line2")
		# sat11TLE = TLE(10,"sat11","line1","line2")

		sat1 = NextPass(0,sat1TLE,sat1AOS, sat1LOS, 0,0,0,0)
		sat2 = NextPass(1,sat2TLE,sat2AOS, sat2LOS, 0,0,0,0)
		sat3 = NextPass(2,sat3TLE,sat3AOS, sat3LOS, 0,0,0,0)
		sat4 = NextPass(3,sat4TLE,sat4AOS, sat4LOS, 0,0,0,0)
		sat5 = NextPass(4,sat5TLE,sat5AOS, sat5LOS, 0,0,0,0)
		sat6 = NextPass(5,sat6TLE,sat6AOS, sat6LOS, 0,0,0,0)
		sat7 = NextPass(6,sat7TLE,sat7AOS, sat7LOS, 0,0,0,0)
		sat8 = NextPass(7,sat8TLE,sat8AOS, sat8LOS, 0,0,0,0)
		sat9 = NextPass(8,sat9TLE,sat9AOS, sat9LOS, 0,0,0,0)
		# sat10 = NextPass(9,sat10TLE,sat10AOS,sat10LOS, 0,0,0,0)
		# sat11 = NextPass(10,sat11TLE,sat11AOS,sat11LOS, 0,0,0,0)

		satList=[sat1,sat2,sat3,sat4,sat5,sat6,sat7,sat8,sat9]
		usefulTime=3
		shouldBe,nextPassList=HillClimbing.randomRestart(satList,usefulTime)
		#print(order)
		print("{} rr diff".format(shouldBe))
		#willitalwaysbefour?
		self.assertIs(0<shouldBe<5,True)


	def test_randomrestart_many_real_sats(self):
		catAOS = datetime(2017,1,25,0,52,59)
		catLOS = datetime(2017,1,25,1,4,28)
		sixtysevenCAOS = datetime(2017,1,25,0,6,52)
		sixtysevenCLOS = datetime(2017,1,25,0,14,42)
		sixtysevenDAOS = datetime(2017,1,25,0,8,37)
		sixtysevenDLOS = datetime(2017,1,25,0,16,18)
		aistAOS = datetime(2017,1,25,0,35,21)
		aistLOS = datetime(2017,1,25,0,48,8)
		beesatAOS = datetime(2017,1,25,0,46,48)
		beesatLOS = datetime(2017,1,25,1,0,4) 
		briteAOS = datetime(2017,1,25,0,19,39)
		briteLOS = datetime(2017,1,25,0,30,4)
		cubebugAOS = datetime(2017,1,25,0,41,54)
		cubebugLOS = datetime(2017,1,25,0,52,49)
		sailAOS = datetime(2017,1,25,0,41,17)
		sailLOS = datetime(2017,1,25,0,53,28)
		eagleAOS = datetime(2017,1,25,0,53,13)
		eagleLOS = datetime(2017,1,25,1,2,56)	
		exoAOS = datetime(2017,1,25,0,57,27)
		exoLOS = datetime(2017,1,25,1,5,27)
		fconeAOS = datetime(2017,1,25,0,17,14)
		fconeLOS = datetime(2017,1,25,0,30,6)
		fcthreeAOS = datetime(2017,1,25,0,11,3)
		fcthreeLOS = datetime(2017,1,25,0,23,54)
		fcfiveAOS = datetime(2017,1,25,0,8,47)
		fcfiveLOS = datetime(2017,1,25,0,21,37)
		fceightAOS = datetime(2017,1,25,0,52,35)
		fceightLOS = datetime(2017,1,25,1,5,21)
		fcnineAOS = datetime(2017,1,25,0,50,43)
		fcnineLOS = datetime(2017,1,25,1,3,31)
		fctenAOS = datetime(2017,1,25,0,53,57)
		fctenLOS = datetime(2017,1,25,1,6,40)
		fcelevenAOS = datetime(2017,1,25,0,59,45)
		fcelevenLOS = datetime(2017,1,25,1,12,25)	
		fethirteenAOS = datetime(2017,1,25,1,7,32)
		fethirteenLOS = datetime(2017,1,25,1,15,6)	
		fefourteenAOS = datetime(2017,1,25,0,0,33)
		fefourteenLOS = datetime(2017,1,25,0,8,13)	
		itupAOS = datetime(2017,1,25,0,22,12)
		itupLOS = datetime(2017,1,25,0,34,49)	

	#09 

		catTLE = TLE(0,"cat","line1","line2")
		sixtysevenCTLE = TLE(1,"sixtysevenC","line1","line2")
		sixtysevenDTLE= TLE(1,"sixtysevenD","line1","line2")
		aistTLE= TLE(1,"aist","line1","line2")
		beesatTLE= TLE(1,"beesat","line1","line2")
		briteTLE= TLE(1,"brite","line1","line2")
		cubebugTLE= TLE(1,"cubebug","line1","line2")
		sailTLE= TLE(1,"sail","line1","line2")
		eagleTLE= TLE(1,"eagle","line1","line2")
		exoTLE= TLE(1,"exo","line1","line2")
		fconeTLE= TLE(1,"fcone","line1","line2")
		fcthreeTLE= TLE(1,"fcthree","line1","line2")
		fcfiveTLE= TLE(1,"fcfive","line1","line2")
		fceightTLE	= TLE(1,"fceight","line1","line2")
		fcnineTLE= TLE(1,"fcnine","line1","line2")
		fctenTLE= TLE(1,"fcten","line1","line2")
		fcelevenTLE= TLE(1,"fceleven","line1","line2")
		fethirteenTLE= TLE(1,"fethirteen","line1","line2")
		fefourteenTLE= TLE(1,"fefourteen","line1","line2")
		itupTLE= TLE(1,"itup","line1","line2")

		date1 = datetime(2017, 1, 1, 12, 0, 0)
			# id, tle, riseTime, setTime, duration, maxElevation, riseAzimuth, setAzimuth
		cat = NextPass(0,catTLE, catAOS, catLOS, 0,0,0,0)
		sixtysevenC = NextPass(1,sixtysevenCTLE,sixtysevenCAOS, sixtysevenCLOS,date1,date1,date1,date1)
		sixtysevenD = NextPass(2,sixtysevenDTLE,sixtysevenDAOS, sixtysevenDLOS,date1,date1,date1,date1)
		aist = NextPass(3,aistTLE,aistAOS, aistLOS,date1,date1,date1,date1)
		beesat = NextPass(4,beesatTLE,beesatAOS, beesatLOS,date1,date1,date1,date1)
		brite = NextPass(5,briteTLE,briteAOS, briteLOS,date1,date1,date1,date1)
		cubebug = NextPass(6,cubebugTLE,cubebugAOS, cubebugLOS,date1,date1,date1,date1)
		sail = NextPass(7,sailTLE,sailAOS, sailLOS,date1,date1,date1,date1)
		eagle = NextPass(8,eagleTLE,eagleAOS, eagleLOS,date1,date1,date1,date1)
		exo = NextPass(9,exoTLE,exoAOS,exoLOS,date1,date1,date1,date1)
		fcone = NextPass(10,fconeTLE,fconeAOS,fconeLOS,date1,date1,date1,date1)
		fcthree = NextPass(11,fcthreeTLE,fcthreeAOS, fcthreeLOS,date1,date1,date1,date1)
		fcfive = NextPass(12,fcfiveTLE,fcfiveAOS, fcfiveLOS,date1,date1,date1,date1)
		fceight = NextPass(13,fceightTLE,fceightAOS,fceightLOS,date1,date1,date1,date1)
		fcnine = NextPass(14,fcnineTLE,fcnineAOS,fcnineLOS,date1,date1,date1,date1)
		fcten = NextPass(15,fctenTLE,fctenAOS, fctenLOS,date1,date1,date1,date1)
		fceleven = NextPass(16,fcelevenTLE,fcelevenAOS, fcelevenLOS,date1,date1,date1,date1)
		fethirteen = NextPass(17,fethirteenTLE,fethirteenAOS,fethirteenLOS,date1,date1,date1,date1)
		fefourteen = NextPass(18,fefourteenTLE,fefourteenAOS,fefourteenLOS,date1,date1,date1,date1)
		itup = NextPass(19,itupTLE,itupAOS, itupLOS,date1,date1,date1,date1)		

		satList=[cat,sixtysevenC,sixtysevenD,aist,beesat,brite,cubebug,sail,eagle,
		exo,fcone,fcthree,fcfive,fceight,fcnine,fcten,fceleven,fethirteen,fefourteen,
		itup]
		usefulTime=3
		shouldBe,nextPassList=HillClimbing.randomRestart(satList,usefulTime)
		print("{} rr real".format(shouldBe))
		#willitalwaysbefour?
		self.assertIs(3<shouldBe<9,True)